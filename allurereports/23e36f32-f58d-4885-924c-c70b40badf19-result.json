{"name": "test_sub_learn_chapters", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"eds-btn eds-btn--primary eds-btn--capsular eds-btn--md\" style=\"padding: 0.5rem 1rem;\">...</button> is not clickable at point (100, 19). Other element would receive the click: <img class=\"embibe-logo\" alt=\"\" src=\"https://assets.embibe.com/production/web-assets/assets/images/embibeLogo.svg\">\n  (Session info: chrome=131.0.6778.109)\nStacktrace:\n0   chromedriver                        0x0000000100c83b08 cxxbridge1$str$ptr + 3651580\n1   chromedriver                        0x0000000100c7c358 cxxbridge1$str$ptr + 3620940\n2   chromedriver                        0x00000001006e44b4 cxxbridge1$string$len + 89224\n3   chromedriver                        0x000000010072e12c cxxbridge1$string$len + 391424\n4   chromedriver                        0x000000010072c77c cxxbridge1$string$len + 384848\n5   chromedriver                        0x000000010072a6c0 cxxbridge1$string$len + 376468\n6   chromedriver                        0x0000000100729af8 cxxbridge1$string$len + 373452\n7   chromedriver                        0x000000010071efbc cxxbridge1$string$len + 329616\n8   chromedriver                        0x000000010071ea10 cxxbridge1$string$len + 328164\n9   chromedriver                        0x00000001007620fc cxxbridge1$string$len + 604368\n10  chromedriver                        0x000000010071d0b0 cxxbridge1$string$len + 321668\n11  chromedriver                        0x000000010071dd00 cxxbridge1$string$len + 324820\n12  chromedriver                        0x0000000100c4ee4c cxxbridge1$str$ptr + 3435328\n13  chromedriver                        0x0000000100c52164 cxxbridge1$str$ptr + 3448408\n14  chromedriver                        0x0000000100c361c0 cxxbridge1$str$ptr + 3333812\n15  chromedriver                        0x0000000100c52a24 cxxbridge1$str$ptr + 3450648\n16  chromedriver                        0x0000000100c279cc cxxbridge1$str$ptr + 3274432\n17  chromedriver                        0x0000000100c6d138 cxxbridge1$str$ptr + 3558956\n18  chromedriver                        0x0000000100c6d2b4 cxxbridge1$str$ptr + 3559336\n19  chromedriver                        0x0000000100c7bfcc cxxbridge1$str$ptr + 3620032\n20  libsystem_pthread.dylib             0x000000018814ef94 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8", "trace": "self = <Test.test_E2E.TestEmbibe object at 0x102c6aa50>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.learn\n    def test_sub_learn_chapters(self):\n        log = self.getLogger()\n        self.test_sign_in_password()\n        learn = LearnHomePage(self.driver)\n>       learn.sub_learn_chapter()\n\nTest/test_E2E.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject/learn_home_page.py:310: in sub_learn_chapter\n    self.play_video_button()\nPageObject/learn_home_page.py:788: in play_video_button\n    self.driver.find_element(*LearnHomePage.learn_button).click()\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x102cd5090>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...00018814ef94 _pthread_start + 136\\\\n21  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"eds-btn eds-btn--primary eds-btn--capsular eds-btn--md\" style=\"padding: 0.5rem 1rem;\">...</button> is not clickable at point (100, 19). Other element would receive the click: <img class=\"embibe-logo\" alt=\"\" src=\"https://assets.embibe.com/production/web-assets/assets/images/embibeLogo.svg\">\nE         (Session info: chrome=131.0.6778.109)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100c83b08 cxxbridge1$str$ptr + 3651580\nE       1   chromedriver                        0x0000000100c7c358 cxxbridge1$str$ptr + 3620940\nE       2   chromedriver                        0x00000001006e44b4 cxxbridge1$string$len + 89224\nE       3   chromedriver                        0x000000010072e12c cxxbridge1$string$len + 391424\nE       4   chromedriver                        0x000000010072c77c cxxbridge1$string$len + 384848\nE       5   chromedriver                        0x000000010072a6c0 cxxbridge1$string$len + 376468\nE       6   chromedriver                        0x0000000100729af8 cxxbridge1$string$len + 373452\nE       7   chromedriver                        0x000000010071efbc cxxbridge1$string$len + 329616\nE       8   chromedriver                        0x000000010071ea10 cxxbridge1$string$len + 328164\nE       9   chromedriver                        0x00000001007620fc cxxbridge1$string$len + 604368\nE       10  chromedriver                        0x000000010071d0b0 cxxbridge1$string$len + 321668\nE       11  chromedriver                        0x000000010071dd00 cxxbridge1$string$len + 324820\nE       12  chromedriver                        0x0000000100c4ee4c cxxbridge1$str$ptr + 3435328\nE       13  chromedriver                        0x0000000100c52164 cxxbridge1$str$ptr + 3448408\nE       14  chromedriver                        0x0000000100c361c0 cxxbridge1$str$ptr + 3333812\nE       15  chromedriver                        0x0000000100c52a24 cxxbridge1$str$ptr + 3450648\nE       16  chromedriver                        0x0000000100c279cc cxxbridge1$str$ptr + 3274432\nE       17  chromedriver                        0x0000000100c6d138 cxxbridge1$str$ptr + 3558956\nE       18  chromedriver                        0x0000000100c6d2b4 cxxbridge1$str$ptr + 3559336\nE       19  chromedriver                        0x0000000100c7bfcc cxxbridge1$str$ptr + 3620032\nE       20  libsystem_pthread.dylib             0x000000018814ef94 _pthread_start + 136\nE       21  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "attachments": [{"name": "log", "source": "d83c64ea-f757-4ca5-87e7-439dbab0b576-attachment.txt", "type": "text/plain"}], "start": 1733824987490, "stop": 1733825088775, "uuid": "bf97c5ff-82a7-4391-ab08-b3c29164f658", "historyId": "450e0cc3138b977396a4aa757e91cbbe", "testCaseId": "450e0cc3138b977396a4aa757e91cbbe", "fullName": "Test.test_E2E.TestEmbibe#test_sub_learn_chapters", "labels": [{"name": "tag", "value": "learn"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "EBL-C02H385BQ6L4.local"}, {"name": "thread", "value": "10500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}