{"name": "test_practicechapters", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id='PracticeConatiner']/div/div[1]/div/div[1]\"}\n  (Session info: chrome=131.0.6778.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x0000000104847b08 cxxbridge1$str$ptr + 3651580\n1   chromedriver                        0x0000000104840358 cxxbridge1$str$ptr + 3620940\n2   chromedriver                        0x00000001042a84b4 cxxbridge1$string$len + 89224\n3   chromedriver                        0x00000001042ec898 cxxbridge1$string$len + 368748\n4   chromedriver                        0x00000001043260fc cxxbridge1$string$len + 604368\n5   chromedriver                        0x00000001042e10b0 cxxbridge1$string$len + 321668\n6   chromedriver                        0x00000001042e1d00 cxxbridge1$string$len + 324820\n7   chromedriver                        0x0000000104812e4c cxxbridge1$str$ptr + 3435328\n8   chromedriver                        0x0000000104816164 cxxbridge1$str$ptr + 3448408\n9   chromedriver                        0x00000001047fa1c0 cxxbridge1$str$ptr + 3333812\n10  chromedriver                        0x0000000104816a24 cxxbridge1$str$ptr + 3450648\n11  chromedriver                        0x00000001047eb9cc cxxbridge1$str$ptr + 3274432\n12  chromedriver                        0x0000000104831138 cxxbridge1$str$ptr + 3558956\n13  chromedriver                        0x00000001048312b4 cxxbridge1$str$ptr + 3559336\n14  chromedriver                        0x000000010483ffcc cxxbridge1$str$ptr + 3620032\n15  libsystem_pthread.dylib             0x000000018814ef94 _pthread_start + 136\n16  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8", "trace": "self = <PageObject.practice_home_page.PracticeHomePage object at 0x110598890>\n\n    def practice_taking(self):\n        for i in range(1, 4):\n            try:\n                question_element = self.driver.find_element(By.XPATH,\n                                                       \"//div[@class='Title_title__og5qd']/div[2]/span[2]\")\n                question = question_element.text\n                time.sleep(5)\n                print(question)\n    \n                if question_element.is_displayed():\n                    if question == \"Multiple Choice\":\n                        time.sleep(5)\n                        self.driver.find_element(By.XPATH,\n                                            \"//div[@class='Title_title__og5qd']/div/div[2]/span/span/i\").click()\n                        self.driver.find_element(By.XPATH, \"//div[@class='question-view-body']/div[2]/div[1]\").click()\n                        self.driver.find_element(By.XPATH, \"//div[@class='question-view-body']/div[2]/div[2]\").click()\n                        self.driver.find_element(By.XPATH, \"//*[text()='Check']\").click()\n                        time.sleep(10)\n                        self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n    \n                    elif question == \"Subjective\":\n                        self.driver.find_element(By.XPATH, \"//*[text()='Full Solution']\").click()\n                        time.sleep(10)\n                        self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n    \n                    elif question == \"Subjective Numerical\":\n                        self.driver.find_element(By.XPATH,\n                                            \"//div[@class='Title_title__og5qd']/div/div[2]/span/span/i\").click()\n                        time.sleep(5)\n                        try:\n                            if self.driver.find_element(By.XPATH, \"[status='DEFAULT']\").is_displayed():\n                                self.driver.find_element(By.XPATH, \"[status='DEFAULT']\").click()\n                                time.sleep(2)\n                                self.driver.find_element(By.XPATH, \"[status='DEFAULT']\").send_keys(\"abc\")\n                                time.sleep(2)\n                                self.driver.find_element(By.XPATH, \"//*[text()='Check']\").click()\n                                time.sleep(10)\n                                self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n                        except:\n                            self.driver.find_element(By.XPATH, \"//*[text()='Solve With Us']\").click()\n                            self.driver.find_element(By.XPATH, \"//*[text()='Full Solution']\").click()\n                            time.sleep(10)\n                            self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n    \n                    elif question == \"Subjective Answer\":\n                        time.sleep(5)\n                        try:\n                            if self.driver.find_element(By.XPATH, \"[status='DEFAULT']\").is_displayed():\n                                self.driver.find_element(By.XPATH, \"[status='DEFAULT']\").click()\n                                time.sleep(2)\n                                self.driver.find_element(By.XPATH, \"[status='DEFAULT']\").send_keys(\"abc\")\n                                time.sleep(2)\n                                self.driver.find_element(By.XPATH, \"//*[text()='Check']\").click()\n                                time.sleep(10)\n                                self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n                        except:\n                            self.driver.find_element(By.XPATH, \"//*[text()='Solve With Us']\").click()\n                            self.driver.find_element(By.XPATH, \"//*[text()='Full Solution']\").click()\n                            time.sleep(10)\n                            self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n    \n                    elif question == \"Fill in The Blanks\":\n                        time.sleep(5)\n                        self.driver.find_element(By.XPATH,\n                                            \"//div[@class='Title_title__og5qd']/div/div[2]/span/span/i\").click()\n                        self.driver.find_element(By.CSS_SELECTOR, \"[id='fb-blank-0']\").click()\n                        self.driver.find_element(By.CSS_SELECTOR, \"[status='DEFAULT']\").send_keys(\"XYZ\")\n                        self.driver.find_element(By.XPATH, \"//*[text()='Check']\").click()\n                        time.sleep(10)\n                        self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n    \n                    elif question == \"Integer\":\n                        time.sleep(5)\n                        self.driver.find_element(By.XPATH,\n                                            \"//div[@class='Title_title__og5qd']/div/div[2]/span/span/i\").click()\n                        self.driver.find_element(By.CSS_SELECTOR, \"[id='fb-blank-0']\").click()\n                        self.driver.find_element(By.CSS_SELECTOR, \"[status='DEFAULT']\").send_keys(\"1\")\n                        self.driver.find_element(By.XPATH, \"//*[text()='Check']\").click()\n                        time.sleep(10)\n                        self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n    \n                    elif question == \"Multiple Fill in The Blanks\":\n                        time.sleep(5)\n                        self.driver.find_element(By.XPATH,\n                                            \"//div[@class='Title_title__og5qd']/div/div[2]/span/span/i\").click()\n                        self.driver.find_element(By.CSS_SELECTOR, \"[id='fb-blank-0']\").click()\n                        self.driver.find_element(By.CSS_SELECTOR, \"[status='DEFAULT']\").send_keys(\"XYZ\")\n                        time.sleep(3)\n                        self.driver.find_element(By.CSS_SELECTOR, \"[id='fb-blank-1']\").click()\n                        time.sleep(2)\n                        self.driver.find_element(By.CSS_SELECTOR, \"[id='fb-blank-1']>input\").send_keys(\"abc\")\n                        self.driver.find_element(By.XPATH, \"//*[text()='Check']\").click()\n                        time.sleep(10)\n                        self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n    \n                    elif question in [\"True-False\", \"Single Choice\", \"Assertion\"]:\n                        time.sleep(5)\n                        self.driver.find_element(By.XPATH,\n                                            \"//div[@class='Title_title__og5qd']/div/div[2]/span/span/i\").click()\n                        self.driver.find_element(By.XPATH, \"//div[@class='question-view-body']/div[2]/div[1]\").click()\n                        self.driver.find_element(By.XPATH, \"//*[text()='Check']\").click()\n                        time.sleep(10)\n>                       self.driver.find_element(By.XPATH, \"//*[text()='Continue']\").click()\n\nPageObject/practice_home_page.py:177: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1103c1cd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018814ef94 _pthread_start + 136\\\\n16  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//*[text()='Continue']\"}\nE         (Session info: chrome=131.0.6778.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104847b08 cxxbridge1$str$ptr + 3651580\nE       1   chromedriver                        0x0000000104840358 cxxbridge1$str$ptr + 3620940\nE       2   chromedriver                        0x00000001042a84b4 cxxbridge1$string$len + 89224\nE       3   chromedriver                        0x00000001042ec898 cxxbridge1$string$len + 368748\nE       4   chromedriver                        0x00000001043260fc cxxbridge1$string$len + 604368\nE       5   chromedriver                        0x00000001042e10b0 cxxbridge1$string$len + 321668\nE       6   chromedriver                        0x00000001042e1d00 cxxbridge1$string$len + 324820\nE       7   chromedriver                        0x0000000104812e4c cxxbridge1$str$ptr + 3435328\nE       8   chromedriver                        0x0000000104816164 cxxbridge1$str$ptr + 3448408\nE       9   chromedriver                        0x00000001047fa1c0 cxxbridge1$str$ptr + 3333812\nE       10  chromedriver                        0x0000000104816a24 cxxbridge1$str$ptr + 3450648\nE       11  chromedriver                        0x00000001047eb9cc cxxbridge1$str$ptr + 3274432\nE       12  chromedriver                        0x0000000104831138 cxxbridge1$str$ptr + 3558956\nE       13  chromedriver                        0x00000001048312b4 cxxbridge1$str$ptr + 3559336\nE       14  chromedriver                        0x000000010483ffcc cxxbridge1$str$ptr + 3620032\nE       15  libsystem_pthread.dylib             0x000000018814ef94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Test.test_E2E.TestEmbibe object at 0x107f57a90>\n\n    @pytest.mark.usefixtures(\"setup\", \"log_on_failure\")\n    @pytest.mark.practice\n    def test_practicechapters(self):\n        log = self.getLogger()\n        self.test_sign_in_password()\n        ph = PracticeHomePage(self.driver)\n        log.info(\"Test case: Clicking on Practice Chapter in Practice Home\")\n        log.info(\"Test case: Practice Now Button is displayed in the Practice Summary\")\n        log.info(\"Test case: User is navigated to Practice Taking Screen on clicking on Practice Now button\")\n>       ph.practice_chapters()\n\nTest/test_E2E.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject/practice_home_page.py:46: in practice_chapters\n    self.practice_taking()\nPageObject/practice_home_page.py:180: in practice_taking\n    self.driver.find_element(By.XPATH,\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1103c1cd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00018814ef94 _pthread_start + 136\\\\n16  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@id='PracticeConatiner']/div/div[1]/div/div[1]\"}\nE         (Session info: chrome=131.0.6778.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104847b08 cxxbridge1$str$ptr + 3651580\nE       1   chromedriver                        0x0000000104840358 cxxbridge1$str$ptr + 3620940\nE       2   chromedriver                        0x00000001042a84b4 cxxbridge1$string$len + 89224\nE       3   chromedriver                        0x00000001042ec898 cxxbridge1$string$len + 368748\nE       4   chromedriver                        0x00000001043260fc cxxbridge1$string$len + 604368\nE       5   chromedriver                        0x00000001042e10b0 cxxbridge1$string$len + 321668\nE       6   chromedriver                        0x00000001042e1d00 cxxbridge1$string$len + 324820\nE       7   chromedriver                        0x0000000104812e4c cxxbridge1$str$ptr + 3435328\nE       8   chromedriver                        0x0000000104816164 cxxbridge1$str$ptr + 3448408\nE       9   chromedriver                        0x00000001047fa1c0 cxxbridge1$str$ptr + 3333812\nE       10  chromedriver                        0x0000000104816a24 cxxbridge1$str$ptr + 3450648\nE       11  chromedriver                        0x00000001047eb9cc cxxbridge1$str$ptr + 3274432\nE       12  chromedriver                        0x0000000104831138 cxxbridge1$str$ptr + 3558956\nE       13  chromedriver                        0x00000001048312b4 cxxbridge1$str$ptr + 3559336\nE       14  chromedriver                        0x000000010483ffcc cxxbridge1$str$ptr + 3620032\nE       15  libsystem_pthread.dylib             0x000000018814ef94 _pthread_start + 136\nE       16  libsystem_pthread.dylib             0x0000000188149d34 thread_start + 8\n\n../../.venv/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "9a6a301f-76f4-4103-b8a0-13ae80ea38cd-attachment.txt", "type": "text/plain"}], "start": 1733823065017, "stop": 1733823173378, "uuid": "8445cbe9-f166-47fd-9b1a-65e24700e6c6", "historyId": "356cea6b869cf85fa95b6af8175455d3", "testCaseId": "356cea6b869cf85fa95b6af8175455d3", "fullName": "Test.test_E2E.TestEmbibe#test_practicechapters", "labels": [{"name": "tag", "value": "practice"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup', 'log_on_failure')"}, {"name": "parentSuite", "value": "Test"}, {"name": "suite", "value": "test_E2E"}, {"name": "subSuite", "value": "TestEmbibe"}, {"name": "host", "value": "EBL-C02H385BQ6L4.local"}, {"name": "thread", "value": "4036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test.test_E2E"}]}